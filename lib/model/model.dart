class ApiModel {
  final id;
  final tendercode;
  final subscriberId;
  final status;
  final workdesc;
  final banglaDescription;
  final totalamt;
  final seduleprice;
  final ernestamt;
  final workduration;
  final tpublishdate;
  final workfindate;
  final tpurchesdate;
  final tsubmissiondate;
  final tboxopendate;
  final tentype;
  final contractorability;
  final display;
  final visitors;
  final typecode;
  final sectorcode;
  final dcode;
  final catcode;
  final invname;
  final tnature;
  final issudate;
  final tendersource;
  final ensStatus;
  final distcode;
  final prebidMeetingDate;
  final procuringPlace;
  final tenderContentType;
  final createdAt;
  final typename;
  final categoryCode;
  ApiModel({
    required this.id,
    required this.tendercode,
    required this.subscriberId,
    required this.status,
    required this.workdesc,
    required this.banglaDescription,
    required this.totalamt,
    required this.seduleprice,
    required this.ernestamt,
    required this.workduration,
    required this.tpublishdate,
    required this.workfindate,
    required this.tpurchesdate,
    required this.tsubmissiondate,
    required this.tboxopendate,
    required this.tentype,
    required this.contractorability,
    required this.display,
    required this.visitors,
    required this.typecode,
    required this.sectorcode,
    required this.dcode,
    required this.catcode,
    required this.invname,
    required this.tnature,
    required this.issudate,
    required this.tendersource,
    required this.ensStatus,
    required this.distcode,
    required this.prebidMeetingDate,
    required this.procuringPlace,
    required this.tenderContentType,
    required this.createdAt,
    required this.typename,
    required this.categoryCode,
  });

  factory ApiModel.fromJson(Map<String, dynamic> json) {
    return ApiModel(
      id: json["id"],
      tendercode: json["tendercode"],
      subscriberId: json["Subscriber_ID"],
      status: json["status"],
      workdesc: json["workdesc"],
      banglaDescription: json["bangla_description"],
      totalamt: json["totalamt"],
      seduleprice: json["seduleprice"],
      ernestamt: json["ernestamt"],
      workduration: json["workduration"],
      tpublishdate: json["tpublishdate"],
      workfindate: json["workfindate"],
      tpurchesdate: json["tpurchesdate"],
      tsubmissiondate: json["tsubmissiondate"],
      tboxopendate: json["tboxopendate"],
      tentype: json["tentype"],
      contractorability: json["contractorability"],
      display: json["display"],
      visitors: json["visitors"],
      typecode: json["typecode"],
      sectorcode: json["sectorcode"],
      dcode: json["dcode"],
      catcode: json["catcode"],
      invname: json["invname"],
      tnature: json["tnature"],
      issudate: json["issudate"],
      tendersource: json["tendersource"],
      ensStatus: json["ens_status"],
      distcode: json["distcode"],
      prebidMeetingDate: json["PrebidMeetingDate"],
      procuringPlace: json["ProcuringPlace"],
      tenderContentType: json["TenderContentType"],
      createdAt: DateTime.parse(json["created_at"]),
      typename: json["typename"],
      categoryCode: json["CategoryCode"],
    );
  }

  Map<String, dynamic> toJson() => {
        "id": id,
        "tendercode": tendercode,
        "Subscriber_ID": subscriberId,
        "status": status,
        "workdesc": workdesc,
        "bangla_description": banglaDescription,
        "totalamt": totalamt,
        "seduleprice": seduleprice,
        "ernestamt": ernestamt,
        "workduration": workduration,
        "tpublishdate": tpublishdate,
        "workfindate": workfindate,
        "tpurchesdate": tpurchesdate,
        "tsubmissiondate": tsubmissiondate,
        "tboxopendate": tboxopendate,
        "tentype": tentype,
        "contractorability": contractorability,
        "display": display,
        "visitors": visitors,
        "typecode": typecode,
        "sectorcode": sectorcode,
        "dcode": dcode,
        "catcode": catcode,
        "invname": invname,
        "tnature": tnature,
        "issudate": issudate,
        "tendersource": tendersource,
        "ens_status": ensStatus,
        "distcode": distcode,
        "PrebidMeetingDate": prebidMeetingDate,
        "ProcuringPlace": procuringPlace,
        "TenderContentType": tenderContentType,
        "created_at": createdAt.toIso8601String(),
        "typename": typename,
        "CategoryCode": categoryCode,
      };
}
